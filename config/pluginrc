" {{{ dein.vim
" install:
" curl https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh > installer.sh
" sh ./installer.sh ~/.cache/dein
let g:deinpath=escape(expand("~/.local/share/dein"), " ")
let g:deinvimpath=escape(expand(deinpath . "/repos/github.com/Shougo/dein.vim"), " ")

if &compatible
    set nocompatible
endif

let &runtimepath.="," . deinvimpath

if dein#load_state(deinpath)
    call dein#begin(deinpath)

    " Let dein manage dein
    call dein#add(deinvimpath)

    " Add or remove your plugins here:
    call dein#add("mhinz/vim-signify")
    call dein#add("rking/vim-detailed")
    call dein#add("Shougo/denite.nvim")
    call dein#add("Shougo/neoinclude.vim")
    call dein#add("tpope/vim-commentary")
    call dein#add("tpope/vim-fugitive")
    call dein#add("tpope/vim-sensible")
    call dein#add("tpope/vim-surround")
    call dein#add("vim-airline/vim-airline")

    call dein#end()

    call dein#save_state()
endif

" If you want to install not installed plugins on startup.
if dein#check_install()
    call dein#install()
endif

unlet deinvimpath
unlet deinpath
"}}}

" {{{ Bufexplorer disabled
let g:bufexplorer_version=1
"}}}

" {{{ MiniBufExpl disabled
let g:loaded_minibufexplorer=1
"}}}

" {{{ Airline
" {{{ tabline
" enable/disable enhanced tabline.
let g:airline#extensions#tabline#enabled=1

" enable/disable displaying buffers with a single tab.
let g:airline#extensions#tabline#show_buffers=1

" configure how numbers are calculated in tab mode.
let g:airline#extensions#tabline#tab_nr_type=1

" enable/disable displaying tab number in tabs mode.
let g:airline#extensions#tabline#show_tab_nr=1
"}}}
"}}}

" {{{ denite
" Define alias
call denite#custom#alias('source', 'file_rec/git', 'file_rec')
call denite#custom#var('file_rec/git', 'command', ['git', 'ls-files', '-co', '--exclude-standard'])

" ctrlp
nnoremap <silent> <C-p> :<C-u>Denite file_rec<CR>
nnoremap <silent> <C-S-p> :<C-u>Denite file_ref/git<CR>
"}}}

" {{{ FuGITive
" {{{ mappings
nmap <silent> <leader>ga :Gwrite<cr>
"}}}
"}}}

" {{{ LaTeX
" {{{ tex_flavor
" If the first line of a *.tex file has the form
"	%&<format>
" then this determined the file type: plaintex (for plain TeX), context (for
" ConTeXt), or tex (for LaTeX). Otherwise, the file is searched for keywords
" to choose context or tex. If no keywords are found, it defaults to plaintex.
" You can change the default by defining the variable g:tex_flavor to the
" format (not the file type) you use most. Use one of these:
"	let g:tex_flavor="plain"
"	let g:tex_flavor="context"
"	let g:tex_flavor="latex"
" Currently no other formats are recognized.
let g:tex_flavor='latex'
"}}}
"}}}

" {{{ LaTeX-Suite
" {{{ Tex_DefaultTargetFormat
" Use this setting to choose the default target format. For example, setting
" this to pdf makes LaTeX-Suite compile a pdf file when you press \ll and fire
" up the pdf viewer on pressing \lv. Make sure that a rules for compiling and
" viewing have been defined for this target format as described here [ls_a_dx]
" and here [ls_a_dF].
let g:Tex_DefaultTargetFormat='pdf'
"}}}
"}}}

" vim: filetype=vim textwidth=80 foldmethod=marker
